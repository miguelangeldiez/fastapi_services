"""Remove username from User model

Revision ID: 8d3ac8504822
Revises: 7c32906c8439
Create Date: 2025-04-29 09:06:18.061521

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d3ac8504822'
down_revision: Union[str, None] = '7c32906c8439'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'comments', ['id'])
    op.add_column('likes', sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_column('likes', 'created_at')
    op.add_column('posts', sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('posts_author_id_fkey', 'posts', type_='foreignkey')
    op.create_foreign_key(None, 'posts', 'user', ['user_id'], ['id'])
    op.drop_column('posts', 'author_id')
    op.drop_column('posts', 'created_at')
    op.drop_constraint('user_username_key', 'user', type_='unique')
    op.drop_column('user', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('user_username_key', 'user', ['username'])
    op.add_column('posts', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('posts', sa.Column('author_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.create_foreign_key('posts_author_id_fkey', 'posts', 'user', ['author_id'], ['id'])
    op.drop_column('posts', 'timestamp')
    op.add_column('likes', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_column('likes', 'timestamp')
    op.drop_constraint(None, 'comments', type_='unique')
    # ### end Alembic commands ###
